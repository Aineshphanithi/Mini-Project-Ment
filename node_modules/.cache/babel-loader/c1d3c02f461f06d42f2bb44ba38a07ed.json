{"ast":null,"code":"var axios = require('axios');\n\nvar ROOT_URL = 'https://www.googleapis.com/youtube/v3/search';\n\nmodule.exports = function (options, callback) {\n  if (!options.key) {\n    throw new Error('Youtube Search expected key, received undefined');\n  }\n\n  var params = {\n    part: 'snippet',\n    key: options.key,\n    q: options.term,\n    type: 'video',\n    maxValue: options.maxValue\n  };\n  axios.get(ROOT_URL, {\n    params: params\n  }).then(function (response) {\n    if (callback) {\n      callback(response.data.items);\n    }\n  }).catch(function (error) {\n    console.error(error);\n  });\n};","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/node_modules/youtube-api-search/index.js"],"names":["axios","require","ROOT_URL","module","exports","options","callback","key","Error","params","part","q","term","type","maxValue","get","then","response","data","items","catch","error","console"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,QAAQ,GAAG,8CAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC5C,MAAI,CAACD,OAAO,CAACE,GAAb,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG;AACXC,IAAAA,IAAI,EAAE,SADK;AAEXH,IAAAA,GAAG,EAAEF,OAAO,CAACE,GAFF;AAGXI,IAAAA,CAAC,EAAEN,OAAO,CAACO,IAHA;AAIXC,IAAAA,IAAI,EAAE,OAJK;AAKXC,IAAAA,QAAQ,EAAET,OAAO,CAACS;AALP,GAAb;AAQAd,EAAAA,KAAK,CAACe,GAAN,CAAUb,QAAV,EAAoB;AAAEO,IAAAA,MAAM,EAAEA;AAAV,GAApB,EACGO,IADH,CACQ,UAASC,QAAT,EAAmB;AACvB,QAAIX,QAAJ,EAAc;AAAEA,MAAAA,QAAQ,CAACW,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAR;AAAgC;AACjD,GAHH,EAIGC,KAJH,CAIS,UAASC,KAAT,EAAgB;AACrBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GANH;AAOD,CApBD","sourcesContent":["var axios = require('axios');\r\n\r\nvar ROOT_URL = 'https://www.googleapis.com/youtube/v3/search';\r\n\r\nmodule.exports = function (options, callback) {\r\n  if (!options.key) {\r\n    throw new Error('Youtube Search expected key, received undefined');\r\n  }\r\n\r\n  var params = {\r\n    part: 'snippet',\r\n    key: options.key,\r\n    q: options.term,\r\n    type: 'video',\r\n    maxValue: options.maxValue\r\n  };\r\n\r\n  axios.get(ROOT_URL, { params: params })\r\n    .then(function(response) {\r\n      if (callback) { callback(response.data.items); }\r\n    })\r\n    .catch(function(error) {\r\n      console.error(error);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}