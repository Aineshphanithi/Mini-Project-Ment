{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\video_details.js\";\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { navigate } from \"@reach/router\";\nimport { grey } from '@material-ui/core/colors';\n\nconst VideoDetail = props => {\n  const video = props.video; //const video = 'https://youtu.be/iRN62IebC04';\n\n  console.log(props);\n  const [watchComplete, setWatchComplete] = useState(false);\n\n  if (!video) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  const videoId = video.id.videoId;\n  const url = `https://www.youtube.com/embed/${videoId}`; //const url = \"https://www.youtube.com/watch?v=ssrNcwxALS4\";\n\n  const onNextVideo = () => {\n    console.log(props);\n\n    if (watchComplete) {\n      console.log(\"watch complete\");\n      props.onCompletion(true);\n      setWatchComplete(false);\n    } else {\n      alert();\n    }\n  };\n\n  const onChange = () => {\n    navigate('/userInput');\n  };\n\n  const handelComplete = ({\n    played\n  }) => {\n    console.log(played);\n\n    if (played >= 0.7 && !watchComplete) {\n      setWatchComplete(true);\n    }\n  };\n\n  console.log(props, watchComplete);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"black\"\n    },\n    className: \"cardp mx-2 my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    className: \"react-player ms-9 container-fluid\",\n    url: url,\n    controls: true,\n    onProgress: handelComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }\n  }, video.snippet.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, video.snippet.description)), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Task:\", props.motivation[props.index]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onNextVideo,\n    className: \"btn btn-outline-primary col mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Go to next video\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onChange,\n    className: \"btn btn-outline-success col mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Change your preferences\")))));\n};\n\nexport default VideoDetail;","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/video_details.js"],"names":["React","useState","ReactPlayer","navigate","grey","VideoDetail","props","video","console","log","watchComplete","setWatchComplete","videoId","id","url","onNextVideo","onCompletion","alert","onChange","handelComplete","played","backgroundColor","snippet","title","description","motivation","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport { navigate } from \"@reach/router\"\r\nimport { grey } from '@material-ui/core/colors';\r\nconst VideoDetail = (props) => {\r\n    \r\n\r\n    const video = props.video;\r\n   //const video = 'https://youtu.be/iRN62IebC04';\r\n    console.log(props)\r\n    const [watchComplete, setWatchComplete] =useState(false)\r\n    if(!video){\r\n        return <div>Loading...</div>;\r\n    }\r\n    \r\n    const videoId = video.id.videoId;\r\n    const url = `https://www.youtube.com/embed/${videoId}`;\r\n    //const url = \"https://www.youtube.com/watch?v=ssrNcwxALS4\";\r\n    \r\n    const onNextVideo=()=>{\r\n        console.log(props)\r\n        if(watchComplete){\r\n            console.log(\"watch complete\")\r\n            props.onCompletion(true)\r\n            setWatchComplete(false)\r\n        }\r\n        else{\r\n            alert()\r\n        }\r\n    }\r\n    const onChange=()=>{\r\n        navigate('/userInput')\r\n    }\r\n    const handelComplete =({played}) => {\r\n        console.log(played)\r\n        if(played >= 0.7 && !watchComplete){\r\n            setWatchComplete(true)\r\n        }\r\n    }\r\n    console.log(props,watchComplete)\r\n    return (\r\n        <div className=\"container\"> \r\n            <div className=\"row\">\r\n            <div style={{backgroundColor:\"black\"}} className=\"cardp mx-2 my-5\" >\r\n                <ReactPlayer \r\n                    className=\"react-player ms-9 container-fluid\"\r\n                    url={url}\r\n                    controls={true}\r\n                    onProgress={handelComplete}\r\n                /> \r\n                <div className=\"card-body\">\r\n                <div><h4>{video.snippet.title}</h4></div>\r\n                <div>{video.snippet.description}</div>\r\n                {/* <div><h4>This is for the testing of the heading of the video</h4></div>\r\n                <div>This is for the testing of the description of the video, the style and the formatting of the text is necessary for the display.</div> */}\r\n                </div>\r\n                 \r\n                    <h2>Task:{props.motivation[props.index]}</h2>\r\n                \r\n                {/* <button onClick={onNextVideo} className={\r\n                    watchComplete ? \"button btnIsComplete\":\"button btnIsNotComplete tooltip\"\r\n                    }>\r\n                    Go to next video<span class={watchComplete ? \"tooltiptextIncomplete\":\"tooltiptext\"}>on completion of Video(70%)</span>\r\n                </button> */}\r\n                <div className=\"row mx-3\">\r\n                <div onClick={onNextVideo} className=\"btn btn-outline-primary col mx-1\" >\r\n                    Go to next video\r\n                </div>\r\n                <div onClick={onChange} className=\"btn btn-outline-success col mx-1\">\r\n                    Change your preferences\r\n                </div>\r\n                </div>\r\n            </div> \r\n            {/* <button onClick={onChange} className={\"button btnforChange tooltip\"\r\n                    }>\r\n                    Change<span class={watchComplete ? \"tooltiptextIncomplete\":\"tooltiptext\"}>Change your Preferences</span>\r\n             </button> */}\r\n            \r\n            </div>\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}