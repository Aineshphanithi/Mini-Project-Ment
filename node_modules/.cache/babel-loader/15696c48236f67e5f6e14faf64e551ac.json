{"ast":null,"code":"'use strict';\n/**\r\n * Dispatch a request to the server using whichever adapter\r\n * is supported by the current environment.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\n\nmodule.exports = function dispatchRequest(config) {\n  return new Promise(function (resolve, reject) {\n    try {\n      // For browsers use XHR adapter\n      if (typeof XMLHttpRequest !== 'undefined' || typeof ActiveXObject !== 'undefined') {\n        require('../adapters/xhr')(resolve, reject, config);\n      } // For node use HTTP adapter\n      else if (typeof process !== 'undefined') {\n          require('../adapters/http')(resolve, reject, config);\n        }\n    } catch (e) {\n      reject(e);\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/hp/Mini-Project-Ment/node_modules/youtube-api-search/node_modules/axios/lib/core/dispatchRequest.js"],"names":["module","exports","dispatchRequest","config","Promise","resolve","reject","XMLHttpRequest","ActiveXObject","require","process","e"],"mappings":"AAAA;AAEA;;;;;;;;AAOAA,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAChD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAI;AACF;AACA,UAAK,OAAOC,cAAP,KAA0B,WAA3B,IAA4C,OAAOC,aAAP,KAAyB,WAAzE,EAAuF;AACrFC,QAAAA,OAAO,CAAC,iBAAD,CAAP,CAA2BJ,OAA3B,EAAoCC,MAApC,EAA4CH,MAA5C;AACD,OAFD,CAGA;AAHA,WAIK,IAAI,OAAOO,OAAP,KAAmB,WAAvB,EAAoC;AACvCD,UAAAA,OAAO,CAAC,kBAAD,CAAP,CAA4BJ,OAA5B,EAAqCC,MAArC,EAA6CH,MAA7C;AACD;AACF,KATD,CASE,OAAOQ,CAAP,EAAU;AACVL,MAAAA,MAAM,CAACK,CAAD,CAAN;AACD;AACF,GAbM,CAAP;AAcD,CAfD","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Dispatch a request to the server using whichever adapter\r\n * is supported by the current environment.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  return new Promise(function (resolve, reject) {\r\n    try {\r\n      // For browsers use XHR adapter\r\n      if ((typeof XMLHttpRequest !== 'undefined') || (typeof ActiveXObject !== 'undefined')) {\r\n        require('../adapters/xhr')(resolve, reject, config);\r\n      }\r\n      // For node use HTTP adapter\r\n      else if (typeof process !== 'undefined') {\r\n        require('../adapters/http')(resolve, reject, config);\r\n      }\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}