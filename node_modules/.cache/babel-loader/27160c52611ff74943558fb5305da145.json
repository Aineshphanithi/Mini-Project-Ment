{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\routing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_VOLUNTEERS } from '../../actions/types';\nimport SearchBar from './search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './video_list';\nimport VideoDetail from './video_details'; //import \"./complete.css\"\n\nimport db from '../../firebase';\nconst API_KEY = \" \"; //\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\n\nconst CuratedContents = props => {\n  const state = {\n    index: 0,\n    indexm: 0,\n    videos: [1, 2, 3, 4, 5],\n    motivates: [\"Talk to friends or family face-to-face\", \"Spend some time in nature\", \"Read a good book\", \"List what you like about yourself\", \"Do something spontaneous\", \"Listen to music\", \"Take a long, hot bath\", \"Watch a funny movie or TV show\"],\n    selectVideo: null,\n    completed: false\n  };\n\n  const componentDidMount = () => {\n    this.props.getVolunteers();\n    console.log(this.props, \"this is video section\");\n    this.videoSearch(this.props.mental);\n  };\n\n  const videoCompleted = completed => {\n    completed = completed;\n  };\n\n  const videoSearch = searchTerm => {\n    console.log(\"hello\", searchTerm, state);\n    db.collection('users').doc(props.user.uid).get().then(function (doc) {\n      if (doc.exists) {\n        searchTerm = searchTerm + doc.data.videoSearchM;\n        console.log(\"Document data:\", doc.data());\n        state.index = state.index + doc.data.UserVideo;\n      } else {\n        console.log(\"video preference not found\");\n      }\n    });\n    console.log(\"This is final video Search\", searchTerm, state.index);\n    YTSearch({\n      key: API_KEY,\n      term: searchTerm,\n      maxValue: 100\n    }, data => {\n      state.videos = data;\n    });\n    state.selectVideo = state.videos[state.index];\n  };\n\n  console.log(state);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoDetail, {\n    video: state.selectedVideo,\n    onCompletion: comp => this.videoCompleted(comp),\n    motivation: state.motivates,\n    index: state.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container columnList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoList, {\n    onVideoSelect: userSelected => this.setState({\n      selectedVideo: userSelected\n    }),\n    completed: state.completed,\n    index: state.index,\n    indexM: state.indexm,\n    videos: state.videos,\n    onCompletion: completed => this.videoCompleted(completed),\n    indexChange: indexC => this.setState({\n      index: indexC\n    }),\n    indexMChange: indexMo => this.setState({\n      indexm: indexMo\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  mental: state.volunteer.videoSearchM\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVolunteers: () => dispatch({\n    type: GET_VOLUNTEERS\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CuratedContents);","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/routing.js"],"names":["React","Component","connect","GET_VOLUNTEERS","SearchBar","YTSearch","VideoList","VideoDetail","db","API_KEY","CuratedContents","props","state","index","indexm","videos","motivates","selectVideo","completed","componentDidMount","getVolunteers","console","log","videoSearch","mental","videoCompleted","searchTerm","collection","doc","user","uid","get","then","exists","data","videoSearchM","UserVideo","key","term","maxValue","selectedVideo","comp","userSelected","setState","indexC","indexMo","mapStateToProps","volunteer","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { GET_VOLUNTEERS } from '../../actions/types';\r\n\r\nimport SearchBar from './search_bar';\r\nimport YTSearch from 'youtube-api-search';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_details';\r\n//import \"./complete.css\"\r\nimport db from '../../firebase'\r\n\r\nconst API_KEY =\" \";//\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\r\n\r\n\r\n\r\nconst CuratedContents =(props)=>{\r\n\r\n    \r\n      const state = {\r\n        index: 0,\r\n        indexm:0,\r\n        videos: [1,2,3,4,5],\r\n        motivates: [\"Talk to friends or family face-to-face\",\r\n          \"Spend some time in nature\",\r\n          \"Read a good book\",\r\n          \"List what you like about yourself\",\r\n          \"Do something spontaneous\",\r\n          \"Listen to music\",\r\n          \"Take a long, hot bath\",\r\n          \"Watch a funny movie or TV show\"],\r\n        selectVideo: null,\r\n        completed: false,\r\n        \r\n      }\r\n      \r\n    \r\n    const componentDidMount=()=>{\r\n      this.props.getVolunteers();\r\n      console.log(this.props,\"this is video section\")\r\n      \r\n      this.videoSearch(this.props.mental);\r\n\r\n    }\r\n  \r\n  \r\n  const videoCompleted = (completed) => {\r\n    \r\n    completed=completed;\r\n  }\r\n\r\n  \r\n  const videoSearch = (searchTerm) => {\r\n    console.log(\"hello\",searchTerm,state)\r\n    db.collection('users').doc(props.user.uid).get().then(function(doc){\r\n      if (doc.exists) {\r\n          searchTerm=searchTerm+doc.data.videoSearchM;\r\n          console.log(\"Document data:\", doc.data(),);\r\n          state.index=state.index+doc.data.UserVideo;\r\n      } \r\n      else{\r\n        console.log(\"video preference not found\")\r\n      }\r\n      \r\n    })\r\n    console.log(\"This is final video Search\",searchTerm,state.index)\r\n    \r\n    \r\n    YTSearch({key: API_KEY, term: searchTerm,maxValue: 100},(data) => {\r\n      state.videos=data;\r\n    });\r\n    state.selectVideo=state.videos[state.index];\r\n  }\r\n  \r\n \r\n    console.log(state)\r\n    return(\r\n      <div className=\"videos\">\r\n        \r\n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\r\n        <div class=\"row\">\r\n          <div class=\"container column\">\r\n            <VideoDetail \r\n              video={state.selectedVideo} \r\n              onCompletion={comp => this.videoCompleted(comp)} \r\n              motivation={state.motivates} \r\n              index={state.index}\r\n            />\r\n        \r\n          </div>\r\n          <div class=\"container columnList\">\r\n            <VideoList\r\n              onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})}\r\n              completed={state.completed}\r\n              index={state.index}\r\n              indexM={state.indexm}\r\n              videos={state.videos}\r\n              onCompletion={completed => this.videoCompleted(completed)}\r\n              indexChange={indexC => this.setState({index: indexC})}\r\n              indexMChange = {indexMo => this.setState({indexm: indexMo})}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  mental : state.volunteer.videoSearchM\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getVolunteers: () => dispatch({type:GET_VOLUNTEERS})\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CuratedContents);"]},"metadata":{},"sourceType":"module"}