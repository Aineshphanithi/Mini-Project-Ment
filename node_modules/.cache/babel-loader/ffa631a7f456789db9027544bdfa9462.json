{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\routing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_VOLUNTEERS } from '../../actions/types';\nimport SearchBar from './search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './video_list';\nimport VideoDetail from './video_details';\nimport \"./complete.css\";\nimport db from '../../firebase';\nconst API_KEY = \" \"; //\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\n\nclass CuratedContents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoCompleted = completed => {\n      this.setState({\n        completed: completed\n      });\n    };\n\n    this.getVideo = SearchVideo => {\n      this.setState({\n        index: this.index + dataset.UserVideo\n      });\n      console.log(\"searchVideo\", SearchVideo);\n      YTSearch({\n        key: API_KEY,\n        term: SearchVideo,\n        maxValue: 100\n      }, data => {\n        this.state.videos = data;\n      });\n      this.state.selectVideo = this.state.videos[this.state.index];\n    };\n\n    this.videoSearch = searchTerm => {\n      console.log(\"hello\", searchTerm, this.state);\n      var dataset;\n      db.collection('users').doc(this.props.user.uid).get().then(function (doc) {\n        if (doc.exists) {\n          //searchTerm=searchTerm+doc.data.videoSearchM;\n          dataset = doc.data();\n          console.log(\"Document data in video:\", doc.data(), dataset.UserVideo, dataset.VideoSearchM);\n        } else {\n          console.log(\"video preference not found\");\n        }\n      });\n      this.getVideo(searchTerm + dataset.VideoSearchM);\n    };\n\n    this.state = {\n      index: 0,\n      indexm: 0,\n      videos: [],\n      motivates: [\"Talk to friends or family face-to-face\", \"Spend some time in nature\", \"Read a good book\", \"List what you like about yourself\", \"Do something spontaneous\", \"Listen to music\", \"Take a long, hot bath\", \"Watch a funny movie or TV show\"],\n      selectVideo: null,\n      completed: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n    console.log(this.props, \"this is video section\");\n    this.videoSearch(this.props.mental);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      onCompletion: comp => this.videoCompleted(comp),\n      motivation: this.state.motivates,\n      index: this.state.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container columnList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      onVideoSelect: userSelected => this.setState({\n        selectedVideo: userSelected\n      }),\n      completed: this.state.completed,\n      index: this.state.index,\n      indexM: this.state.indexm,\n      videos: this.state.videos,\n      onCompletion: completed => this.videoCompleted(completed),\n      indexChange: indexC => this.setState({\n        index: indexC\n      }),\n      indexMChange: indexMo => this.setState({\n        indexm: indexMo\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  mental: state.volunteer.videoSearchM\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVolunteers: () => dispatch({\n    type: GET_VOLUNTEERS\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CuratedContents);","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/routing.js"],"names":["React","Component","connect","GET_VOLUNTEERS","SearchBar","YTSearch","VideoList","VideoDetail","db","API_KEY","CuratedContents","constructor","props","videoCompleted","completed","setState","getVideo","SearchVideo","index","dataset","UserVideo","console","log","key","term","maxValue","data","state","videos","selectVideo","videoSearch","searchTerm","collection","doc","user","uid","get","then","exists","VideoSearchM","indexm","motivates","componentDidMount","getVolunteers","mental","render","selectedVideo","comp","userSelected","indexC","indexMo","mapStateToProps","volunteer","videoSearchM","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,EAAP,MAAe,gBAAf;AACA,MAAMC,OAAO,GAAE,GAAf,C,CAAkB;;AAIlB,MAAMC,eAAN,SAA8BT,SAA9B,CAAuC;AAEnCU,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BrBC,cA5BqB,GA4BHC,SAAD,IAAe;AAE9B,WAAKC,QAAL,CAAc;AAACD,QAAAA,SAAS,EAACA;AAAX,OAAd;AACD,KA/BoB;;AAAA,SAgCrBE,QAhCqB,GAgCTC,WAAD,IAAgB;AACzB,WAAKF,QAAL,CAAc;AAACG,QAAAA,KAAK,EAAC,KAAKA,KAAL,GAAWC,OAAO,CAACC;AAA1B,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BL,WAA1B;AACAZ,MAAAA,QAAQ,CAAC;AAACkB,QAAAA,GAAG,EAAEd,OAAN;AAAee,QAAAA,IAAI,EAAEP,WAArB;AAAiCQ,QAAAA,QAAQ,EAAE;AAA3C,OAAD,EAAkDC,IAAD,IAAU;AACjE,aAAKC,KAAL,CAAWC,MAAX,GAAkBF,IAAlB;AACD,OAFO,CAAR;AAGA,WAAKC,KAAL,CAAWE,WAAX,GAAuB,KAAKF,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWT,KAA7B,CAAvB;AACD,KAvCoB;;AAAA,SAyCrBY,WAzCqB,GAyCNC,UAAD,IAAgB;AAC5BV,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBS,UAApB,EAA+B,KAAKJ,KAApC;AACA,UAAIR,OAAJ;AAEAX,MAAAA,EAAE,CAACwB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,KAAKrB,KAAL,CAAWsB,IAAX,CAAgBC,GAA3C,EAAgDC,GAAhD,GAAsDC,IAAtD,CAA2D,UAASJ,GAAT,EAAa;AACtE,YAAIA,GAAG,CAACK,MAAR,EAAgB;AACZ;AACAnB,UAAAA,OAAO,GAACc,GAAG,CAACP,IAAJ,EAAR;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCW,GAAG,CAACP,IAAJ,EAAvC,EAAkDP,OAAO,CAACC,SAA1D,EAAoED,OAAO,CAACoB,YAA5E;AACO,SAJX,MAKI;AACFlB,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AAGF,OAXD;AAeA,WAAKN,QAAL,CAAce,UAAU,GAACZ,OAAO,CAACoB,YAAjC;AACD,KA7DoB;;AAGjB,SAAKZ,KAAL,GAAa;AACXT,MAAAA,KAAK,EAAE,CADI;AAEXsB,MAAAA,MAAM,EAAC,CAFI;AAGXZ,MAAAA,MAAM,EAAE,EAHG;AAIXa,MAAAA,SAAS,EAAE,CAAC,wCAAD,EACT,2BADS,EAET,kBAFS,EAGT,mCAHS,EAIT,0BAJS,EAKT,iBALS,EAMT,uBANS,EAOT,gCAPS,CAJA;AAYXZ,MAAAA,WAAW,EAAE,IAZF;AAaXf,MAAAA,SAAS,EAAE;AAbA,KAAb;AAiBD;;AACD4B,EAAAA,iBAAiB,GAAE;AACjB,SAAK9B,KAAL,CAAW+B,aAAX;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB,EAAuB,uBAAvB;AACA,SAAKkB,WAAL,CAAiB,KAAKlB,KAAL,CAAWgC,MAA5B;AACD;;AAsCHC,EAAAA,MAAM,GAAE;AACNxB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,SAAD;AAAW,MAAA,kBAAkB,EAAEI,UAAU,IAAI,KAAKD,WAAL,CAAiBC,UAAjB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWmB,aADpB;AAEE,MAAA,YAAY,EAAEC,IAAI,IAAI,KAAKlC,cAAL,CAAoBkC,IAApB,CAFxB;AAGE,MAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWc,SAHzB;AAIE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWT,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE;AAAK,MAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,aAAa,EAAE8B,YAAY,IAAI,KAAKjC,QAAL,CAAc;AAAC+B,QAAAA,aAAa,EAAEE;AAAhB,OAAd,CADjC;AAEE,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWb,SAFxB;AAGE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWT,KAHpB;AAIE,MAAA,MAAM,EAAE,KAAKS,KAAL,CAAWa,MAJrB;AAKE,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWC,MALrB;AAME,MAAA,YAAY,EAAEd,SAAS,IAAI,KAAKD,cAAL,CAAoBC,SAApB,CAN7B;AAOE,MAAA,WAAW,EAAEmC,MAAM,IAAI,KAAKlC,QAAL,CAAc;AAACG,QAAAA,KAAK,EAAE+B;AAAR,OAAd,CAPzB;AAQE,MAAA,YAAY,EAAIC,OAAO,IAAI,KAAKnC,QAAL,CAAc;AAACyB,QAAAA,MAAM,EAAEU;AAAT,OAAd,CAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CAHF,CADF;AA6BD;;AAhGoC;;AAmGvC,MAAMC,eAAe,GAAIxB,KAAD,KAAY;AAElCiB,EAAAA,MAAM,EAAGjB,KAAK,CAACyB,SAAN,CAAgBC;AAFS,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,aAAa,EAAE,MAAMY,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACrD;AAAN,GAAD;AADW,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACiD,eAAD,EAAiBG,kBAAjB,CAAP,CAA4C5C,eAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { GET_VOLUNTEERS } from '../../actions/types';\r\n\r\nimport SearchBar from './search_bar';\r\nimport YTSearch from 'youtube-api-search';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_details';\r\nimport \"./complete.css\"\r\nimport db from '../../firebase'\r\nconst API_KEY =\" \"//\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\r\n\r\n\r\n\r\nclass CuratedContents extends Component{\r\n    \r\n    constructor (props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        index: 0,\r\n        indexm:0,\r\n        videos: [],\r\n        motivates: [\"Talk to friends or family face-to-face\",\r\n          \"Spend some time in nature\",\r\n          \"Read a good book\",\r\n          \"List what you like about yourself\",\r\n          \"Do something spontaneous\",\r\n          \"Listen to music\",\r\n          \"Take a long, hot bath\",\r\n          \"Watch a funny movie or TV show\"],\r\n        selectVideo: null,\r\n        completed: false,\r\n        \r\n      };\r\n      \r\n    }\r\n    componentDidMount(){\r\n      this.props.getVolunteers();\r\n      console.log(this.props,\"this is video section\")\r\n      this.videoSearch(this.props.mental);\r\n    }\r\n  \r\n  \r\n  videoCompleted = (completed) => {\r\n    \r\n    this.setState({completed:completed});\r\n  }\r\n  getVideo = (SearchVideo) =>{\r\n    this.setState({index:this.index+dataset.UserVideo})\r\n    console.log(\"searchVideo\",SearchVideo)\r\n    YTSearch({key: API_KEY, term: SearchVideo,maxValue: 100},(data) => {\r\n      this.state.videos=data;\r\n    });\r\n    this.state.selectVideo=this.state.videos[this.state.index];\r\n  }\r\n  \r\n  videoSearch = (searchTerm) => {\r\n    console.log(\"hello\",searchTerm,this.state)\r\n    var dataset\r\n    \r\n    db.collection('users').doc(this.props.user.uid).get().then(function(doc){\r\n      if (doc.exists) {\r\n          //searchTerm=searchTerm+doc.data.videoSearchM;\r\n          dataset=doc.data();\r\n          console.log(\"Document data in video:\", doc.data(),dataset.UserVideo,dataset.VideoSearchM);\r\n                } \r\n      else{\r\n        console.log(\"video preference not found\")\r\n      }\r\n      \r\n\r\n    })\r\n    \r\n    \r\n      \r\n    this.getVideo(searchTerm+dataset.VideoSearchM)\r\n  }\r\n  \r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div className=\"videos\">\r\n        \r\n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\r\n        <div class=\"row\">\r\n          <div class=\"container column\">\r\n            <VideoDetail \r\n              video={this.state.selectedVideo} \r\n              onCompletion={comp => this.videoCompleted(comp)} \r\n              motivation={this.state.motivates} \r\n              index={this.state.index}\r\n            />\r\n        \r\n          </div>\r\n          <div class=\"container columnList\">\r\n            <VideoList\r\n              onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})}\r\n              completed={this.state.completed}\r\n              index={this.state.index}\r\n              indexM={this.state.indexm}\r\n              videos={this.state.videos}\r\n              onCompletion={completed => this.videoCompleted(completed)}\r\n              indexChange={indexC => this.setState({index: indexC})}\r\n              indexMChange = {indexMo => this.setState({indexm: indexMo})}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  mental : state.volunteer.videoSearchM\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getVolunteers: () => dispatch({type:GET_VOLUNTEERS})\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CuratedContents);"]},"metadata":{},"sourceType":"module"}