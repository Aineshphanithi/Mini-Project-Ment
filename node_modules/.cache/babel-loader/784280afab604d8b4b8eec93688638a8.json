{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\routing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_VOLUNTEERS } from '../../actions/types';\nimport SearchBar from './search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './video_list';\nimport VideoDetail from './video_details';\nimport \"./complete.css\";\nimport db from '../../firebase';\nimport { navigate } from '@reach/router';\nconst API_KEY = \"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\"; //\"AIzaSyDE2WFy_oZsNwPSnFdKbMBtcXfV68UVkDM\"\n\nclass CuratedContents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoCompleted = completed => {\n      this.setState({\n        completed: completed\n      });\n    };\n\n    this.getVideo = () => {\n      console.log(\"Retrieving the list\");\n      YTSearch({\n        key: API_KEY,\n        term: SearchVideo,\n        maxValue: 100\n      }, data => {\n        this.state.videos = data;\n      });\n    };\n\n    this.videoSearch = userVideos => {\n      //console.log(\"hello\",searchTerm,this.state, db.collection('users').doc(this.props.user.uid))\n      this.setState({\n        videos: userVideos\n      });\n      this.setState({\n        selectVideo: this.state.videos[this.state.index]\n      });\n      console.log(\"user videos loaded\");\n    };\n\n    this.state = {\n      index: 0,\n      indexm: 0,\n      videos: [],\n      motivates: [\"Talk to friends or family face-to-face\", \"Spend some time in nature\", \"Read a good book\", \"List what you like about yourself\", \"Do something spontaneous\", \"Listen to music\", \"Take a long, hot bath\", \"Watch a funny movie or TV show\"],\n      selectVideo: null,\n      completed: false,\n      user: this.props.user\n    };\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n    console.log(this.props, \"this is video section\");\n    var dataset;\n    db.collection('users').doc(this.props.user.uid).get().then(function (doc) {\n      if (doc.exists) {\n        //searchTerm=searchTerm+doc.data.videoSearchM;\n        dataset = doc.data();\n        console.log(\"Document data in video:\", doc.data(), dataset.UserVideo, dataset.VideoSearchM);\n      } else {\n        console.log(\"video preference not found\");\n      }\n\n      return dataset; //this.getVideo(searchTerm+dataset.VideoSearchM, dataset.UserVideo)\n    }).then(dataset => {\n      console.log(dataset, this.state.index);\n      this.setState({\n        index: dataset.UserVideo % 50\n      });\n      this.setState({\n        indexm: dataset.UserVideo % 8\n      }); //this.getVideo(searchTerm+dataset.VideoSearchM)\n\n      var userVideos;\n      YTSearch({\n        key: API_KEY,\n        term: this.props.mental + dataset.VideoSearchM,\n        maxValue: 100\n      }, data => {\n        userVideos = data;\n        console.log(\"fetched user data\", this.state);\n        this.videoSearch(userVideos);\n      }); //this.state.selectVideo=this.state.videos[this.state.index];\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      onCompletion: comp => this.videoCompleted(comp),\n      motivation: this.state.motivates,\n      index: this.state.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container columnList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      onVideoSelect: userSelected => this.setState({\n        selectedVideo: userSelected\n      }),\n      completed: this.state.completed,\n      user: this.state.user,\n      index: this.state.index,\n      indexM: this.state.indexm,\n      videos: this.state.videos,\n      onCompletion: completed => this.videoCompleted(completed),\n      indexChange: indexC => this.setState({\n        index: indexC\n      }),\n      indexMChange: indexMo => this.setState({\n        indexm: indexMo\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  mental: state.volunteer.videoSearchM\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVolunteers: () => dispatch({\n    type: GET_VOLUNTEERS\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CuratedContents);","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/routing.js"],"names":["React","Component","connect","GET_VOLUNTEERS","SearchBar","YTSearch","VideoList","VideoDetail","db","navigate","API_KEY","CuratedContents","constructor","props","videoCompleted","completed","setState","getVideo","console","log","key","term","SearchVideo","maxValue","data","state","videos","videoSearch","userVideos","selectVideo","index","indexm","motivates","user","componentDidMount","getVolunteers","dataset","collection","doc","uid","get","then","exists","UserVideo","VideoSearchM","mental","render","searchTerm","selectedVideo","comp","userSelected","indexC","indexMo","mapStateToProps","volunteer","videoSearchM","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { GET_VOLUNTEERS } from '../../actions/types';\r\n\r\nimport SearchBar from './search_bar';\r\nimport YTSearch from 'youtube-api-search';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_details';\r\nimport \"./complete.css\"\r\nimport db from '../../firebase'\r\nimport { navigate } from '@reach/router';\r\nconst API_KEY =\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";//\"AIzaSyDE2WFy_oZsNwPSnFdKbMBtcXfV68UVkDM\"\r\n\r\n\r\n\r\nclass CuratedContents extends Component{\r\n    \r\n    constructor (props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        index: 0,\r\n        indexm:0,\r\n        videos: [],\r\n        motivates: [\"Talk to friends or family face-to-face\",\r\n          \"Spend some time in nature\",\r\n          \"Read a good book\",\r\n          \"List what you like about yourself\",\r\n          \"Do something spontaneous\",\r\n          \"Listen to music\",\r\n          \"Take a long, hot bath\",\r\n          \"Watch a funny movie or TV show\"],\r\n        selectVideo: null,\r\n        completed: false,\r\n        user: this.props.user\r\n    \r\n      };\r\n      \r\n    }\r\n    componentDidMount(){\r\n      this.props.getVolunteers();\r\n      console.log(this.props,\"this is video section\")\r\n      \r\n      var dataset\r\n      db.collection('users').doc(this.props.user.uid).get().then(function(doc){\r\n        if (doc.exists) {\r\n            //searchTerm=searchTerm+doc.data.videoSearchM;\r\n            dataset=doc.data();\r\n            console.log(\"Document data in video:\", doc.data(),dataset.UserVideo,dataset.VideoSearchM);\r\n                  \r\n          } \r\n        else{\r\n          console.log(\"video preference not found\")\r\n        }\r\n       return dataset;\r\n        //this.getVideo(searchTerm+dataset.VideoSearchM, dataset.UserVideo)\r\n      }).then((dataset)=>{\r\n          console.log(dataset,this.state.index)\r\n          this.setState({index:dataset.UserVideo%50})\r\n          this.setState({indexm:dataset.UserVideo%8})\r\n          //this.getVideo(searchTerm+dataset.VideoSearchM)\r\n          var userVideos\r\n          YTSearch({key: API_KEY, term: this.props.mental+dataset.VideoSearchM,maxValue: 100},(data) => {\r\n            userVideos=data;\r\n            console.log(\"fetched user data\",this.state)\r\n            this.videoSearch(userVideos);\r\n          })\r\n            \r\n          \r\n          \r\n          //this.state.selectVideo=this.state.videos[this.state.index];\r\n        }\r\n      )\r\n    }\r\n  \r\n  \r\n  videoCompleted = (completed) => {\r\n    \r\n    this.setState({completed:completed});\r\n    \r\n  }\r\n  getVideo = () =>{\r\n    \r\n    console.log(\"Retrieving the list\")\r\n    YTSearch({key: API_KEY, term: SearchVideo,maxValue: 100},(data) => {\r\n      this.state.videos=data;\r\n    });\r\n    \r\n  }\r\n  \r\n  videoSearch = (userVideos) => {\r\n    //console.log(\"hello\",searchTerm,this.state, db.collection('users').doc(this.props.user.uid))\r\n    \r\n    this.setState({videos:userVideos});\r\n    this.setState({selectVideo:this.state.videos[this.state.index]});\r\n    \r\n    console.log(\"user videos loaded\")\r\n\r\n  }\r\n  \r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div className=\"videos\">\r\n        \r\n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\r\n        <div class=\"row\">\r\n          <div class=\"container column\">\r\n            <VideoDetail \r\n              video={this.state.selectedVideo} \r\n              onCompletion={comp => this.videoCompleted(comp)} \r\n              motivation={this.state.motivates} \r\n              index={this.state.index}\r\n            />\r\n        \r\n          </div>\r\n          <div class=\"container columnList\">\r\n            <VideoList\r\n              onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})}\r\n              completed={this.state.completed}\r\n              user={this.state.user}\r\n              index={this.state.index}\r\n              indexM={this.state.indexm}\r\n              videos={this.state.videos}\r\n              onCompletion={completed => this.videoCompleted(completed)}\r\n              indexChange={indexC => this.setState({index: indexC})}\r\n              indexMChange = {indexMo => this.setState({indexm: indexMo})}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  mental : state.volunteer.videoSearchM\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getVolunteers: () => dispatch({type:GET_VOLUNTEERS})\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CuratedContents);"]},"metadata":{},"sourceType":"module"}