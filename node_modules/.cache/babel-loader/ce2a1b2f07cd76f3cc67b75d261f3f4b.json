{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\video_details.js\";\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player'; //import \"./player.css\"\n//import \"./complete.css\"\n\nimport { navigate } from \"@reach/router\";\n\nconst VideoDetail = props => {\n  const video = props.video;\n  console.log(props);\n  const [watchComplete, setWatchComplete] = useState(false);\n\n  if (!video) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  const videoId = video.id.videoId;\n  const url = `https://www.youtube.com/embed/${videoId}`; //const url = \"https://www.youtube.com/watch?v=ssrNcwxALS4\";\n\n  const onNextVideo = () => {\n    console.log(props);\n\n    if (watchComplete) {\n      console.log(\"watch complete\");\n      props.onCompletion(true);\n      setWatchComplete(false);\n    }\n  };\n\n  const onChange = () => {\n    navigate('/userInput');\n  };\n\n  const handelComplete = ({\n    played\n  }) => {\n    console.log(played);\n\n    if (played >= 0.7 && !watchComplete) {\n      setWatchComplete(true);\n    }\n  };\n\n  console.log(props, watchComplete);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    className: \"react-player \",\n    url: url,\n    controls: true,\n    onProgress: handelComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, video.snippet.description)), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Task:\", props.motivation[props.index]), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onNextVideo,\n    className: \"btn btn-success ml-3 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Go to next video\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onChange,\n    className: \"btn btn-success ml-3 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Change your preferences\")));\n};\n\nexport default VideoDetail;","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/video_details.js"],"names":["React","useState","ReactPlayer","navigate","VideoDetail","props","video","console","log","watchComplete","setWatchComplete","videoId","id","url","onNextVideo","onCompletion","onChange","handelComplete","played","snippet","description","motivation","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;AACA;;AACA,SAASC,QAAT,QAAyB,eAAzB;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAG3B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACC,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAmCT,QAAQ,CAAC,KAAD,CAAjD;;AACA,MAAG,CAACK,KAAJ,EAAU;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAED,QAAMK,OAAO,GAAGL,KAAK,CAACM,EAAN,CAASD,OAAzB;AACA,QAAME,GAAG,GAAI,iCAAgCF,OAAQ,EAArD,CAX2B,CAY3B;;AAEA,QAAMG,WAAW,GAAC,MAAI;AAClBP,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAGI,aAAH,EAAiB;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAH,MAAAA,KAAK,CAACU,YAAN,CAAmB,IAAnB;AACAL,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AAEJ,GARD;;AASA,QAAMM,QAAQ,GAAC,MAAI;AACfb,IAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,GAFD;;AAGA,QAAMc,cAAc,GAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;;AACA,QAAGA,MAAM,IAAI,GAAV,IAAiB,CAACT,aAArB,EAAmC;AAC/BC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ,GALD;;AAMAH,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBI,aAAlB;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,eADd;AAEI,IAAA,GAAG,EAAEI,GAFT;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,UAAU,EAAEI,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,KAAK,CAACa,OAAN,CAAcC,WAApB,CAFA,CAPJ,eAYQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUf,KAAK,CAACgB,UAAN,CAAiBhB,KAAK,CAACiB,KAAvB,CAAV,CAZR,eAmBI;AAAQ,IAAA,OAAO,EAAER,WAAjB;AAA8B,IAAA,SAAS,EAAC,2BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBJ,eAsBI;AAAQ,IAAA,OAAO,EAAEE,QAAjB;AAA2B,IAAA,SAAS,EAAC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAtBJ,CAFJ,CADJ;AAuCH,CAxED;;AA0EA,eAAeZ,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactPlayer from 'react-player'\r\n//import \"./player.css\"\r\n//import \"./complete.css\"\r\nimport { navigate } from \"@reach/router\"\r\nconst VideoDetail = (props) => {\r\n    \r\n\r\n    const video = props.video;\r\n   console.log(props)\r\n    const [watchComplete, setWatchComplete] =useState(false)\r\n    if(!video){\r\n        return <div>Loading...</div>;\r\n    }\r\n    \r\n    const videoId = video.id.videoId;\r\n    const url = `https://www.youtube.com/embed/${videoId}`;\r\n    //const url = \"https://www.youtube.com/watch?v=ssrNcwxALS4\";\r\n    \r\n    const onNextVideo=()=>{\r\n        console.log(props)\r\n        if(watchComplete){\r\n            console.log(\"watch complete\")\r\n            props.onCompletion(true)\r\n            setWatchComplete(false)\r\n        }\r\n\r\n    }\r\n    const onChange=()=>{\r\n        navigate('/userInput')\r\n    }\r\n    const handelComplete =({played}) => {\r\n        console.log(played)\r\n        if(played >= 0.7 && !watchComplete){\r\n            setWatchComplete(true)\r\n        }\r\n    }\r\n    console.log(props,watchComplete)\r\n    return (\r\n        <div>\r\n            \r\n            <div >\r\n                <ReactPlayer \r\n                    className=\"react-player \"\r\n                    url={url}\r\n                    controls={true}\r\n                    onProgress={handelComplete}\r\n                /> \r\n                <div>\r\n                <div><h4></h4></div>\r\n                <div>{video.snippet.description}</div>\r\n                </div>\r\n                 \r\n                    <h2>Task:{props.motivation[props.index]}</h2>\r\n                \r\n                {/* <button onClick={onNextVideo} className={\r\n                    watchComplete ? \"button btnIsComplete\":\"button btnIsNotComplete tooltip\"\r\n                    }>\r\n                    Go to next video<span class={watchComplete ? \"tooltiptextIncomplete\":\"tooltiptext\"}>on completion of Video(70%)</span>\r\n                </button> */}\r\n                <button onClick={onNextVideo} className=\"btn btn-success ml-3 mt-3\">\r\n                    Go to next video\r\n                </button>\r\n                <button onClick={onChange} className=\"btn btn-success ml-3 mt-3\">\r\n                    Change your preferences\r\n                </button>\r\n\r\n            </div> \r\n            {/* <button onClick={onChange} className={\"button btnforChange tooltip\"\r\n                    }>\r\n                    Change<span class={watchComplete ? \"tooltiptextIncomplete\":\"tooltiptext\"}>Change your Preferences</span>\r\n             </button> */}\r\n            \r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}