{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\routing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_VOLUNTEERS } from '../../actions/types';\nimport SearchBar from './search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './video_list';\nimport VideoDetail from './video_details';\nimport \"./complete.css\";\nimport db from '../../firebase';\nimport { navigate } from '@reach/router';\nconst API_KEY = \"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\"; //\"AIzaSyDE2WFy_oZsNwPSnFdKbMBtcXfV68UVkDM\"\n\nclass CuratedContents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoCompleted = completed => {\n      this.setState({\n        completed: completed\n      });\n    };\n\n    this.getVideo = SearchVideo => {\n      console.log(\"Retrieving the list\");\n      YTSearch({\n        key: API_KEY,\n        term: SearchVideo,\n        maxValue: 100\n      }, data => {\n        this.state.videos = data;\n      });\n      this.state.selectVideo = this.state.videos[this.state.index];\n    };\n\n    this.videoSearch = uservi => {\n      console.log(\"hello\", searchTerm, this.state, db.collection('users').doc(this.props.user.uid));\n      this.state.selectVideo = this.state.videos[this.state.index];\n    };\n\n    this.state = {\n      index: 0,\n      indexm: 0,\n      videos: [],\n      motivates: [\"Talk to friends or family face-to-face\", \"Spend some time in nature\", \"Read a good book\", \"List what you like about yourself\", \"Do something spontaneous\", \"Listen to music\", \"Take a long, hot bath\", \"Watch a funny movie or TV show\"],\n      selectVideo: null,\n      completed: false,\n      user: this.props.user\n    };\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n    console.log(this.props, \"this is video section\");\n    var dataset;\n    db.collection('users').doc(this.props.user.uid).get().then(function (doc) {\n      if (doc.exists) {\n        //searchTerm=searchTerm+doc.data.videoSearchM;\n        dataset = doc.data();\n        console.log(\"Document data in video:\", doc.data(), dataset.UserVideo, dataset.VideoSearchM);\n      } else {\n        console.log(\"video preference not found\");\n      }\n\n      return dataset; //this.getVideo(searchTerm+dataset.VideoSearchM, dataset.UserVideo)\n    }).then(dataset => {\n      console.log(dataset, this.state.index);\n      this.setState({\n        index: dataset.UserVideo % 50\n      });\n      this.setState({\n        indexm: dataset.UserVideo % 8\n      }); //this.getVideo(searchTerm+dataset.VideoSearchM)\n\n      var userVideos;\n      YTSearch({\n        key: API_KEY,\n        term: this.props.mental + dataset.VideoSearchM,\n        maxValue: 100\n      }, data => {\n        userVideos = data;\n        console.log(\"fetched user data\", this.state);\n      }).then(() => {\n        this.videoSearch(userVideos);\n      }); //this.state.selectVideo=this.state.videos[this.state.index];\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      onCompletion: comp => this.videoCompleted(comp),\n      motivation: this.state.motivates,\n      index: this.state.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container columnList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      onVideoSelect: userSelected => this.setState({\n        selectedVideo: userSelected\n      }),\n      completed: this.state.completed,\n      user: this.state.user,\n      index: this.state.index,\n      indexM: this.state.indexm,\n      videos: this.state.videos,\n      onCompletion: completed => this.videoCompleted(completed),\n      indexChange: indexC => this.setState({\n        index: indexC\n      }),\n      indexMChange: indexMo => this.setState({\n        indexm: indexMo\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  mental: state.volunteer.videoSearchM\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVolunteers: () => dispatch({\n    type: GET_VOLUNTEERS\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CuratedContents);","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/routing.js"],"names":["React","Component","connect","GET_VOLUNTEERS","SearchBar","YTSearch","VideoList","VideoDetail","db","navigate","API_KEY","CuratedContents","constructor","props","videoCompleted","completed","setState","getVideo","SearchVideo","console","log","key","term","maxValue","data","state","videos","selectVideo","index","videoSearch","uservi","searchTerm","collection","doc","user","uid","indexm","motivates","componentDidMount","getVolunteers","dataset","get","then","exists","UserVideo","VideoSearchM","userVideos","mental","render","selectedVideo","comp","userSelected","indexC","indexMo","mapStateToProps","volunteer","videoSearchM","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { GET_VOLUNTEERS } from '../../actions/types';\r\n\r\nimport SearchBar from './search_bar';\r\nimport YTSearch from 'youtube-api-search';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_details';\r\nimport \"./complete.css\"\r\nimport db from '../../firebase'\r\nimport { navigate } from '@reach/router';\r\nconst API_KEY =\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";//\"AIzaSyDE2WFy_oZsNwPSnFdKbMBtcXfV68UVkDM\"\r\n\r\n\r\n\r\nclass CuratedContents extends Component{\r\n    \r\n    constructor (props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        index: 0,\r\n        indexm:0,\r\n        videos: [],\r\n        motivates: [\"Talk to friends or family face-to-face\",\r\n          \"Spend some time in nature\",\r\n          \"Read a good book\",\r\n          \"List what you like about yourself\",\r\n          \"Do something spontaneous\",\r\n          \"Listen to music\",\r\n          \"Take a long, hot bath\",\r\n          \"Watch a funny movie or TV show\"],\r\n        selectVideo: null,\r\n        completed: false,\r\n        user: this.props.user\r\n    \r\n      };\r\n      \r\n    }\r\n    componentDidMount(){\r\n      this.props.getVolunteers();\r\n      console.log(this.props,\"this is video section\")\r\n      \r\n      var dataset\r\n      db.collection('users').doc(this.props.user.uid).get().then(function(doc){\r\n        if (doc.exists) {\r\n            //searchTerm=searchTerm+doc.data.videoSearchM;\r\n            dataset=doc.data();\r\n            console.log(\"Document data in video:\", doc.data(),dataset.UserVideo,dataset.VideoSearchM);\r\n                  \r\n          } \r\n        else{\r\n          console.log(\"video preference not found\")\r\n        }\r\n       return dataset;\r\n        //this.getVideo(searchTerm+dataset.VideoSearchM, dataset.UserVideo)\r\n      }).then((dataset)=>{\r\n          console.log(dataset,this.state.index)\r\n          this.setState({index:dataset.UserVideo%50})\r\n          this.setState({indexm:dataset.UserVideo%8})\r\n          //this.getVideo(searchTerm+dataset.VideoSearchM)\r\n          var userVideos\r\n          YTSearch({key: API_KEY, term: this.props.mental+dataset.VideoSearchM,maxValue: 100},(data) => {\r\n            userVideos=data;\r\n            console.log(\"fetched user data\",this.state)\r\n          }).then(()=>{\r\n            this.videoSearch(userVideos);\r\n          })\r\n          \r\n          //this.state.selectVideo=this.state.videos[this.state.index];\r\n        }\r\n      )\r\n    }\r\n  \r\n  \r\n  videoCompleted = (completed) => {\r\n    \r\n    this.setState({completed:completed});\r\n  }\r\n  getVideo = (SearchVideo) =>{\r\n    \r\n    console.log(\"Retrieving the list\")\r\n    YTSearch({key: API_KEY, term: SearchVideo,maxValue: 100},(data) => {\r\n      this.state.videos=data;\r\n    });\r\n    this.state.selectVideo=this.state.videos[this.state.index];\r\n  }\r\n  \r\n  videoSearch = (uservi) => {\r\n    console.log(\"hello\",searchTerm,this.state, db.collection('users').doc(this.props.user.uid))\r\n    \r\n    this.state.selectVideo=this.state.videos[this.state.index];\r\n      \r\n  }\r\n  \r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div className=\"videos\">\r\n        \r\n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\r\n        <div class=\"row\">\r\n          <div class=\"container column\">\r\n            <VideoDetail \r\n              video={this.state.selectedVideo} \r\n              onCompletion={comp => this.videoCompleted(comp)} \r\n              motivation={this.state.motivates} \r\n              index={this.state.index}\r\n            />\r\n        \r\n          </div>\r\n          <div class=\"container columnList\">\r\n            <VideoList\r\n              onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})}\r\n              completed={this.state.completed}\r\n              user={this.state.user}\r\n              index={this.state.index}\r\n              indexM={this.state.indexm}\r\n              videos={this.state.videos}\r\n              onCompletion={completed => this.videoCompleted(completed)}\r\n              indexChange={indexC => this.setState({index: indexC})}\r\n              indexMChange = {indexMo => this.setState({indexm: indexMo})}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  mental : state.volunteer.videoSearchM\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getVolunteers: () => dispatch({type:GET_VOLUNTEERS})\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CuratedContents);"]},"metadata":{},"sourceType":"module"}