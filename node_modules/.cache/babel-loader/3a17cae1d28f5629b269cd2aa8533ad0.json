{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\React\\\\Mini Project-Ment\\\\src\\\\components\\\\videos\\\\routing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_VOLUNTEERS } from '../../actions/types';\nimport SearchBar from './search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './video_list';\nimport VideoDetail from './video_details';\nimport \"./complete.css\";\nconst API_KEY = \" \"; //\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\n\nclass CuratedContents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoCompleted = completed => {\n      this.setState({\n        completed: completed\n      });\n    };\n\n    this.videoSearch = searchTerm => {\n      console.log(\"hello\", searchTerm, this.state);\n      YTSearch({\n        key: API_KEY,\n        term: searchTerm\n      }, data => {\n        this.setState({\n          videos: data,\n          selectedVideo: data[0]\n        });\n      });\n    };\n\n    this.state = {\n      index: 0,\n      indexm: 0,\n      videos: [1, 2, 3, 4, 5],\n      motivates: [\"Talk to friends or family face-to-face\", \"Spend some time in nature\", \"Read a good book\", \"List what you like about yourself\", \"Do something spontaneous\", \"Listen to music\", \"Take a long, hot bath\", \"Watch a funny movie or TV show\"],\n      selectVideo: null,\n      completed: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n    console.log(this.props, \"this is video section\");\n    this.videoSearch(this.props.mental);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      onCompletion: comp => this.videoCompleted(comp),\n      motivation: this.state.motivates,\n      index: this.state.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container columnList bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      onVideoSelect: userSelected => this.setState({\n        selectedVideo: userSelected\n      }),\n      completed: this.state.completed,\n      index: this.state.index,\n      indexM: this.state.indexm,\n      videos: this.state.videos,\n      onCompletion: completed => this.videoCompleted(completed),\n      indexChange: indexC => this.setState({\n        index: indexC\n      }),\n      indexMChange: indexMo => this.setState({\n        indexm: indexMo\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  mental: state.volunteer.videoSearchM\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVolunteers: () => dispatch({\n    type: GET_VOLUNTEERS\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CuratedContents);","map":{"version":3,"sources":["D:/FrontEnd/React/Mini Project-Ment/src/components/videos/routing.js"],"names":["React","Component","connect","GET_VOLUNTEERS","SearchBar","YTSearch","VideoList","VideoDetail","API_KEY","CuratedContents","constructor","props","videoCompleted","completed","setState","videoSearch","searchTerm","console","log","state","key","term","data","videos","selectedVideo","index","indexm","motivates","selectVideo","componentDidMount","getVolunteers","mental","render","comp","userSelected","indexC","indexMo","mapStateToProps","volunteer","videoSearchM","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { GET_VOLUNTEERS } from '../../actions/types';\r\n\r\nimport SearchBar from './search_bar';\r\nimport YTSearch from 'youtube-api-search';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_details';\r\nimport \"./complete.css\"\r\n\r\nconst API_KEY =\" \"; //\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\r\n\r\n\r\n\r\nclass CuratedContents extends Component{\r\n\r\n    constructor (props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        index: 0,\r\n        indexm:0,\r\n        videos: [1,2,3,4,5],\r\n        motivates: [\"Talk to friends or family face-to-face\",\r\n          \"Spend some time in nature\",\r\n          \"Read a good book\",\r\n          \"List what you like about yourself\",\r\n          \"Do something spontaneous\",\r\n          \"Listen to music\",\r\n          \"Take a long, hot bath\",\r\n          \"Watch a funny movie or TV show\"],\r\n        selectVideo: null,\r\n        completed: false,\r\n        \r\n      };\r\n      \r\n    }\r\n    componentDidMount(){\r\n      this.props.getVolunteers();\r\n      console.log(this.props,\"this is video section\")\r\n      this.videoSearch(this.props.mental);\r\n    }\r\n  \r\n  \r\n  videoCompleted = (completed) => {\r\n    \r\n    this.setState({completed:completed});\r\n  }\r\n\r\n  \r\n  videoSearch = (searchTerm) => {\r\n    console.log(\"hello\",searchTerm,this.state)\r\n    YTSearch({key: API_KEY, term: searchTerm},(data) => {\r\n      \r\n      this.setState({\r\n          videos: data,\r\n          selectedVideo: data[0]\r\n      });\r\n    });\r\n  }\r\n  \r\n  render(){\r\n    console.log(this.state)\r\n    return(\r\n      <div className=\"videos\">\r\n        \r\n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\r\n        <div className=\"row\">\r\n          <div className=\"container column\">\r\n            <VideoDetail \r\n              video={this.state.selectedVideo} \r\n              onCompletion={comp => this.videoCompleted(comp)} \r\n              motivation={this.state.motivates} \r\n              index={this.state.index}\r\n            />\r\n        \r\n          </div>\r\n          <div className=\"container columnList bg-primary\">\r\n            <VideoList\r\n              onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})}\r\n              completed={this.state.completed}\r\n              index={this.state.index}\r\n              indexM={this.state.indexm}\r\n              videos={this.state.videos}\r\n              onCompletion={completed => this.videoCompleted(completed)}\r\n              indexChange={indexC => this.setState({index: indexC})}\r\n              indexMChange = {indexMo => this.setState({indexm: indexMo})}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  mental : state.volunteer.videoSearchM\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getVolunteers: () => dispatch({type:GET_VOLUNTEERS})\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CuratedContents);"]},"metadata":{},"sourceType":"module"}