{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\creatComment.js\";\nimport React, { useState, useEffect } from 'react'; //import {Card} from 'antd';\n\nimport { Link } from \"@reach/router\";\nimport db from './firebase';\nimport CommentSnipet from './commentSnipet';\nimport _ from 'lodash';\n\nconst CreateComment = props => {\n  const [comments, setComment] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    let posts = db.collection('posts').doc(props.id);\n    posts.get().then(function (doc) {\n      if (doc.exists) {\n        console.log(doc.data());\n        let {\n          content,\n          title\n        } = doc.data();\n        setTitle(title);\n        setContent(content);\n      }\n    });\n    posts.collection('comments').get().then(comments => {\n      comments.forEach(comment => {\n        let data = comment.data();\n        let {\n          id\n        } = comment;\n        let payload = {\n          id,\n          ...data\n        };\n        setComment(comments => [...comments, payload]);\n      });\n    });\n  }, []);\n  console.log(comments, title, content);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postSnippet_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card mx-5 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Special title treatment\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, content.split('\\n').map((paragraph, idx) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 36\n      }\n    }, paragraph);\n  }))), /*#__PURE__*/React.createElement(\"h5\", {\n    \"mx-5\": true,\n    \"my-1\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Comments:\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 45\n    }\n  }, \"Add Comment\"), Object.keys(comments).length > 0 ? _.map(comments, (article, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card mx-5 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, article.comment)) : /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card mx-5 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"No comments yet\")));\n};\n\nexport default CreateComment;","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/creatComment.js"],"names":["React","useState","useEffect","Link","db","CommentSnipet","_","CreateComment","props","comments","setComment","title","setTitle","content","setContent","posts","collection","doc","id","get","then","exists","console","log","data","forEach","comment","payload","split","map","paragraph","idx","Object","keys","length","article"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\n//import {Card} from 'antd';\r\nimport {Link} from \"@reach/router\"\r\nimport db from './firebase'\r\nimport CommentSnipet from'./commentSnipet';\r\nimport _ from 'lodash'\r\n\r\nconst CreateComment=(props) => {\r\n    const[comments,setComment]=useState([])\r\n    const [title,setTitle]=useState('')\r\n    const [content,setContent]=useState('')\r\n    \r\n    useEffect(()=>{\r\n        let posts=db.collection('posts').doc(props.id)\r\n        posts.get().then(function(doc){\r\n            if(doc.exists){\r\n                console.log(doc.data())\r\n                let {content,title}=doc.data()\r\n                setTitle(title)\r\n                setContent(content)\r\n            }\r\n            \r\n        })\r\n        posts.collection('comments').get().then(comments=>{\r\n            comments.forEach(comment=>{\r\n                let data = comment.data()\r\n                let { id } = comment\r\n                let payload={\r\n                    id,\r\n                    ...data\r\n                }\r\n                setComment((comments)=>[...comments,payload])\r\n            })\r\n        })\r\n    },[])\r\n    console.log(comments,title,content)\r\n    return (\r\n        <div className=\"postSnippet_container\">\r\n            \r\n            <div class=\"card mx-5 my-3\" >\r\n                <h5 class=\"card-header\">{title}</h5>\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Special title treatment</h5>\r\n\r\n                    <p class=\"card-text\">{\r\n                        content.split('\\n').map((paragraph,idx)=>{\r\n                            return <p key = {idx}>{paragraph}</p>;\r\n                        })\r\n                    }\r\n                    </p>\r\n                    \r\n                </div>\r\n                <h5 mx-5 my-1>Comments:</h5><button >Add Comment</button>\r\n                {Object.keys(comments).length >0 ? _.map(comments,(article,idx)=>(\r\n                        <div class=\"card mx-5 my-1\" >{article.comment}</div>\r\n                )):\r\n                <div class=\"card mx-5 my-1\">No comments yet</div> }    \r\n                    \r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CreateComment;"]},"metadata":{},"sourceType":"module"}