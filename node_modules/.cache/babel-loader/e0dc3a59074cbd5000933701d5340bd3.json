{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\n\n\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {},\n      key,\n      val,\n      i;\n\n  if (!headers) {\n    return parsed;\n  }\n\n  utils.forEach(headers.split('\\n'), function (line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n  return parsed;\n};","map":{"version":3,"sources":["C:/Users/hp/Mini-Project-Ment/node_modules/youtube-api-search/node_modules/axios/lib/helpers/parseHeaders.js"],"names":["utils","require","module","exports","parseHeaders","headers","parsed","key","val","i","forEach","split","line","indexOf","trim","substr","toLowerCase"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;AAEA;;;;;;;;;;;;;;;AAaAC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC9C,MAAIC,MAAM,GAAG,EAAb;AAAA,MAAiBC,GAAjB;AAAA,MAAsBC,GAAtB;AAAA,MAA2BC,CAA3B;;AAEA,MAAI,CAACJ,OAAL,EAAc;AAAE,WAAOC,MAAP;AAAgB;;AAEhCN,EAAAA,KAAK,CAACU,OAAN,CAAcL,OAAO,CAACM,KAAR,CAAc,IAAd,CAAd,EAAmC,UAASC,IAAT,EAAe;AAChDH,IAAAA,CAAC,GAAGG,IAAI,CAACC,OAAL,CAAa,GAAb,CAAJ;AACAN,IAAAA,GAAG,GAAGP,KAAK,CAACc,IAAN,CAAWF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeN,CAAf,CAAX,EAA8BO,WAA9B,EAAN;AACAR,IAAAA,GAAG,GAAGR,KAAK,CAACc,IAAN,CAAWF,IAAI,CAACG,MAAL,CAAYN,CAAC,GAAG,CAAhB,CAAX,CAAN;;AAEA,QAAIF,GAAJ,EAAS;AACPD,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAAN,GAAc,IAAd,GAAqBC,GAAnC,GAAyCA,GAAvD;AACD;AACF,GARD;AAUA,SAAOF,MAAP;AACD,CAhBD","sourcesContent":["'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {}, key, val, i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}