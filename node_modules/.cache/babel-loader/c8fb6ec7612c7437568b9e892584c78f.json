{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini Project - Volunteers Part\\\\src\\\\components\\\\videos\\\\routing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GET_VOLUNTEERS } from '../../actions/types';\nimport SearchBar from './search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './video_list';\nimport VideoDetail from './video_details'; //import \"./complete.css\"\n\nimport db from '../../firebase';\nconst API_KEY = \" \"; //\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\n\nconst CuratedContents = props => {\n  const state = {\n    index: 0,\n    indexm: 0,\n    videos: [1, 2, 3, 4, 5],\n    motivates: [\"Talk to friends or family face-to-face\", \"Spend some time in nature\", \"Read a good book\", \"List what you like about yourself\", \"Do something spontaneous\", \"Listen to music\", \"Take a long, hot bath\", \"Watch a funny movie or TV show\"],\n    selectVideo: null,\n    completed: false\n  };\n\n  const componentDidMount = () => {\n    this.props.getVolunteers();\n    console.log(this.props, \"this is video section\");\n    db.collection('users').doc(props.user.uid).get().then(function (doc) {\n      if (doc.exists) {\n        db.collection('users').doc(props.user.uid).update({\n          'VideoSearchM': \" \"\n        });\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        db.collection('users').doc(props.user.uid).set({\n          'VideoSearchM': \" \",\n          UserVideo: 0\n        });\n        console.log(\"No such document!\", doc.data());\n      }\n    });\n    this.videoSearch(this.props.mental);\n  };\n\n  const videoCompleted = completed => {\n    completed = completed;\n  };\n\n  const videoSearch = searchTerm => {\n    console.log(\"hello\", searchTerm, state);\n    YTSearch({\n      key: API_KEY,\n      term: searchTerm,\n      maxValue: 100\n    }, data => {\n      db.collection('users').doc(props.user.uid).get().then(function (doc) {\n        if (doc.exists) {\n          state.videos = data;\n          db.collection('users').doc(props.user.uid).update({\n            'VideoSearchM': \" \"\n          });\n          console.log(\"Document data:\", doc.data());\n        } else {\n          state.videos = data; // doc.data() will be undefined in this case\n\n          db.collection('users').doc(props.user.uid).set({\n            UserVideo: 0\n          });\n          console.log(\"No such document!\", doc.data());\n\n          selectedVideo: data[0];\n        }\n      });\n    });\n  };\n\n  console.log(state);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoDetail, {\n    video: state.selectedVideo,\n    onCompletion: comp => this.videoCompleted(comp),\n    motivation: state.motivates,\n    index: state.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container columnList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoList, {\n    onVideoSelect: userSelected => this.setState({\n      selectedVideo: userSelected\n    }),\n    completed: state.completed,\n    index: state.index,\n    indexM: state.indexm,\n    videos: state.videos,\n    onCompletion: completed => this.videoCompleted(completed),\n    indexChange: indexC => this.setState({\n      index: indexC\n    }),\n    indexMChange: indexMo => this.setState({\n      indexm: indexMo\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  mental: state.volunteer.videoSearchM\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVolunteers: () => dispatch({\n    type: GET_VOLUNTEERS\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CuratedContents);","map":{"version":3,"sources":["E:/Mini Project - Volunteers Part/src/components/videos/routing.js"],"names":["React","Component","connect","GET_VOLUNTEERS","SearchBar","YTSearch","VideoList","VideoDetail","db","API_KEY","CuratedContents","props","state","index","indexm","videos","motivates","selectVideo","completed","componentDidMount","getVolunteers","console","log","collection","doc","user","uid","get","then","exists","update","data","set","UserVideo","videoSearch","mental","videoCompleted","searchTerm","key","term","maxValue","selectedVideo","comp","userSelected","setState","indexC","indexMo","mapStateToProps","volunteer","videoSearchM","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { GET_VOLUNTEERS } from '../../actions/types';\r\n\r\nimport SearchBar from './search_bar';\r\nimport YTSearch from 'youtube-api-search';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_details';\r\n//import \"./complete.css\"\r\nimport db from '../../firebase'\r\n\r\nconst API_KEY =\" \";//\"AIzaSyALY8xL3Y85VTF27ABKdd4HRTihe13beAA\";\r\n\r\n\r\n\r\nconst CuratedContents =(props)=>{\r\n\r\n    \r\n      const state = {\r\n        index: 0,\r\n        indexm:0,\r\n        videos: [1,2,3,4,5],\r\n        motivates: [\"Talk to friends or family face-to-face\",\r\n          \"Spend some time in nature\",\r\n          \"Read a good book\",\r\n          \"List what you like about yourself\",\r\n          \"Do something spontaneous\",\r\n          \"Listen to music\",\r\n          \"Take a long, hot bath\",\r\n          \"Watch a funny movie or TV show\"],\r\n        selectVideo: null,\r\n        completed: false,\r\n        \r\n      }\r\n      \r\n    \r\n    const componentDidMount=()=>{\r\n      this.props.getVolunteers();\r\n      console.log(this.props,\"this is video section\")\r\n      db.collection('users').doc(props.user.uid).get().then(function(doc){\r\n        if (doc.exists) {\r\n            db.collection('users').doc(props.user.uid).update({'VideoSearchM':\" \"})\r\n            console.log(\"Document data:\", doc.data());\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            db.collection('users').doc(props.user.uid).set({'VideoSearchM':\" \",UserVideo:0})\r\n            console.log(\"No such document!\",doc.data());\r\n      }\r\n      });\r\n      this.videoSearch(this.props.mental);\r\n\r\n    }\r\n  \r\n  \r\n  const videoCompleted = (completed) => {\r\n    \r\n    completed=completed;\r\n  }\r\n\r\n  \r\n  const videoSearch = (searchTerm) => {\r\n    console.log(\"hello\",searchTerm,state)\r\n    YTSearch({key: API_KEY, term: searchTerm,maxValue: 100},(data) => {\r\n      db.collection('users').doc(props.user.uid).get().then(function(doc){\r\n        if (doc.exists) {\r\n            state.videos= data;\r\n            db.collection('users').doc(props.user.uid).update({'VideoSearchM':\" \"})\r\n            console.log(\"Document data:\", doc.data());\r\n        } else {\r\n            state.videos= data;\r\n            // doc.data() will be undefined in this case\r\n            db.collection('users').doc(props.user.uid).set({UserVideo:0})\r\n            console.log(\"No such document!\",doc.data());\r\n            selectedVideo: data[0];\r\n      }\r\n      });\r\n      \r\n    });\r\n  }\r\n  \r\n \r\n    console.log(state)\r\n    return(\r\n      <div className=\"videos\">\r\n        \r\n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\r\n        <div class=\"row\">\r\n          <div class=\"container column\">\r\n            <VideoDetail \r\n              video={state.selectedVideo} \r\n              onCompletion={comp => this.videoCompleted(comp)} \r\n              motivation={state.motivates} \r\n              index={state.index}\r\n            />\r\n        \r\n          </div>\r\n          <div class=\"container columnList\">\r\n            <VideoList\r\n              onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})}\r\n              completed={state.completed}\r\n              index={state.index}\r\n              indexM={state.indexm}\r\n              videos={state.videos}\r\n              onCompletion={completed => this.videoCompleted(completed)}\r\n              indexChange={indexC => this.setState({index: indexC})}\r\n              indexMChange = {indexMo => this.setState({indexm: indexMo})}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  mental : state.volunteer.videoSearchM\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getVolunteers: () => dispatch({type:GET_VOLUNTEERS})\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CuratedContents);"]},"metadata":{},"sourceType":"module"}